{"version":3,"sources":["components/memoryCard/memoryCard.js","components/nav/nav.js","components/wrapper/wrapper.js","components/title/title.js","bootstrap/Container.js","bootstrap/Row.js","bootstrap/Column.js","App.js","index.js"],"names":["MemoryCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","src","image","alt","name","Nav","href","title","rightWrong","score","topScore","Wrapper","prop","children","Title","Container","concat","fluid","Row","Column","size","split","map","join","ShuffleCards","array","i","length","j","Math","floor","random","_ref","App","state","cards","currentScore","clicked","_this","indexOf","handleIncrement","setState","handleReset","newScore","handleShuffle","shuffleCards","_this2","this","console","log","wrapper_wrapper","nav_nav","title_title","bootstrap_Container","bootstrap_Row","card","bootstrap_Column","key","memoryCard_memoryCard","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.537cd0fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./memoryCard.css\";\r\n\r\nconst MemoryCard = props => (\r\n    <div\r\n    className= \"cards\"\r\n    value= {props.id}\r\n    onClick= {() => props.handleClick(props.id)}\r\n    >\r\n    <div className= \"img-container\">\r\n        <img src= {props.image} alt= {props.name} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default MemoryCard","import React from \"react\";\r\nimport \"./nav.css\";\r\n\r\nconst Nav = props => (\r\n    <nav>\r\n        <ul>\r\n            <li className= \"brand animated lightSpeedIn\">\r\n            <a href= \"/clicky-game/\">{props.title}</a>\r\n            </li>\r\n            \r\n            <li id= \"rw\">{props.rightWrong}</li>\r\n\r\n            <li id= \"current-score\">Current Score: {props.score}</li>\r\n\r\n            <li id= \"top-score\">Top Score {props.topScore}</li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./wrapper.css\";\r\n\r\nconst Wrapper = prop => <div className= \"wrapper\">{prop.children}</div>;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./title.css\";\r\n\r\nconst Title = props => <h1 className= \"title\">{props.children}</h1>;\r\n\r\nexport default Title;","import React from \"react\";\r\n\r\nconst Container = props => \r\n    <div className= {`container${props.fluid ? \"-fluid\" : \"\"}`}>\r\n        {props.children}\r\n    </div>;\r\n\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\nconst Row = props => \r\n    <div className= {`row${props.fluid ? \"-fluid\" : \"\"}`}>\r\n        {props.children}\r\n    </div>;\r\n\r\nexport default Row;","import React from \"react\";\r\n\r\nconst Column = props => {\r\n    const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n    return(\r\n        <div className= {size}>\r\n        {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Column;","import React, { Component } from 'react';\nimport MemoryCard from \"./components/memoryCard\";\nimport Nav from \"./components/nav\";\nimport Wrapper from \"./components/wrapper\";\nimport Title from \"./components/title\";\nimport Container from \"./bootstrap/Container\";\nimport Row from \"./bootstrap/Row\";\nimport Column from \"./bootstrap/Column\";\nimport './App.css';\nimport cards from \"./cards.json\"\n\n\n// how the cards shift\nvar ShuffleCards = array => {\n  for(let i = array.length -1; i > 0; i--){\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};\n\n// ShuffleCards();\n\nclass App extends Component {\n\n// setting state\n    state = {\n    cards,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: '',\n    clicked: [],\n  };\n\n// how the score will work\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1){\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    }else{\n      this.handleReset();\n    }\n  }\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      rightWrong: ''\n    });\n    if (newScore >= this.state.topScore){\n      this.setState({ topScore: newScore });\n    }\n    else if (newScore === 12) {\n      this.setState({ rightWrong: 'You Win'});\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightWrong: 'You Lose',\n      clicked: []\n    });\n    this.handleShuffle();\n  }\n\n  handleShuffle = () => {\n      let shuffleCards = ShuffleCards(cards);\n      this.setState({ cards: shuffleCards});\n    };\n\n  render() {\n    console.log(cards)\n      return (\n        <Wrapper>\n          <Nav\n            title={'Final Fantasy Character Click game'}\n            score= {this.state.currentScore}\n            topScore= {this.state.topScore}\n            rightWrong= {this.state.rightWrong}\n          />\n          \n          <Title>\n            Attempt to click on each of the different characters without clicking the same one twice.\n          </Title>\n          \n          <Container>\n            <Row>\n              {this.state.cards.map((card, i) => (\n                <Column size= \"md-3 sm-6\" key= {i}>\n                  <MemoryCard\n                    handleClick={this.handleClick}\n                    handleIncrement={this.handleIncrement}\n                    handleReset={this.handleReset}\n                    id={card.id}\n                    image={card.image}\n                  />\n                </Column>\n              ))}\n            </Row>\n          </Container>\n        </Wrapper>      \n      );\n    }\n  }\n\n  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}